{"version":3,"sources":["Components/Filter/Filter.module.css","Components/ContactsForm/ContactsForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/ContactsForm/ContactsForm.module.css","Components/ContactList/ContactList.module.css"],"names":["module","exports","ContactsForm","state","name","number","handleInputChange","e","target","value","setState","handleSubmit","preventDefault","props","onAddContact","onSubmit","this","className","s","TaskEditor","id","uuidv4","TaskEditor_label","TaskEditor_input","type","pattern","title","required","onChange","TaskEditor_button","Component","ContactList","TaskList","contacts","map","contact","TaskList_item","TaskList_button","onClick","onDeleteContact","Filter","onChangeFilter","App","filter","addContact","event","searchSameName","includes","alert","length","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","toLowerCase","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d01cc7c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor_input\":\"Filter_TaskEditor_input__3mmaw\"};","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport s from './ContactsForm.module.css'\r\n\r\nclass ContactsForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onAddContact({ ...this.state});\r\n    this.setState({ name: \"\", number: \"\" });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit} className={s.TaskEditor}>\r\n        <label id={uuidv4()} className={s.TaskEditor_label}>\r\n          <input\r\n            className={s.TaskEditor_input}\r\n            id={uuidv4()}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            value={this.state.name}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>\r\n        <label id={uuidv4()} className={s.TaskEditor_label}>\r\n          <input\r\n            className={s.TaskEditor_input}\r\n            id={uuidv4()}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            value={this.state.number}\r\n            onChange={this.handleInputChange}\r\n          />\r\n        </label>          \r\n        <button className={s.TaskEditor_button} type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  };\r\n};\r\n\r\nContactsForm.propTypes = {\r\n  onAddContact: PropTypes.func,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n};\r\n\r\nexport default ContactsForm;","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\nimport s from \"./ContactList.module.css\";\r\n\r\nclass ContactList extends Component {\r\n    render() {\r\n        return (\r\n            <ul className={s.TaskList}>\r\n                {this.props.contacts.map((contact) => (\r\n                <li key={contact.id} className = {s.TaskList_item}>\r\n                    {contact.name} : {contact.number}\r\n                        <button\r\n                            className={s.TaskList_button}\r\n                            onClick={() => this.props.onDeleteContact(contact.id)}>\r\n                            Удалить\r\n                        </button>\r\n                </li>\r\n                ))}\r\n            </ul>\r\n        )\r\n    }\r\n}\r\n\r\nContactList.propTypes = {\r\n  onDeleteContact: PropTypes.func,\r\n  contacts: PropTypes.arrayOf(PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n  })),\r\n}\r\n\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\nimport React, { Component } from \"react\";\r\nimport s from './Filter.module.css';\r\n\r\nclass Filter extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>Find contacts by name</h3>\r\n                <input\r\n                    className={s.TaskEditor_input}\r\n                    type=\"text\"\r\n                    value={this.props.value}\r\n                    onChange={(e) => this.props.onChangeFilter(e.target.value)}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string,\r\n  onchangeFilter: PropTypes.func,\r\n};\r\n\r\nexport default Filter;","import React,{ Component } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactsForm from './Components/ContactsForm/ContactsForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n\n  addContact = (event) => {\n    const searchSameName = this.state.contacts\n      .map((contact) => (contact.name))\n      .includes(event.name);\n    \n    if (searchSameName) {\n      alert(`${event.name} is already in contacts`);\n    } else if (event.name.length === 0) {\n      alert(\"Fields must be filled!\");\n    } else {\n      const contact = {\n        ...event,\n        id: uuidv4(),\n      };\n    \n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contact],\n      }));\n    }\n  }\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = (filter) => {\n    this.setState({filter})    \n  }\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter((contacts) =>\n      contacts.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  render() \n    {const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactsForm onAddContact={this.addContact}/>\n\n        <h2>Contacts</h2>\n\n        {visibleContacts.length >= 1 && (\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\n        )}\n        \n        <ContactList\n            contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  };\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskEditor\":\"ContactsForm_TaskEditor__2SpKJ\",\"TaskEditor_label\":\"ContactsForm_TaskEditor_label__3mh44\",\"TaskEditor_input\":\"ContactsForm_TaskEditor_input__2kErt\",\"TaskEditorinput\":\"ContactsForm_TaskEditorinput__1tfGI\",\"TaskEditor_button\":\"ContactsForm_TaskEditor_button__1KM73\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TaskList\":\"ContactList_TaskList__2ySUV\",\"TaskList_item\":\"ContactList_TaskList_item__3Cb2J\",\"TaskList_button\":\"ContactList_TaskList_button__3ZmQt\"};"],"sourceRoot":""}